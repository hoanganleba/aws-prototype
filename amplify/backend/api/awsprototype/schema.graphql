type Chat @model @auth(rules: [{allow: public}]) {
  id: ID!
  message: String
  student: Student @connection
  teacher: Teacher @connection
  sender: ID
}

type Enrolment @model @key(name: "byStudent", fields: ["studentID"]) @auth(rules: [{allow: public}]) {
  id: ID!
  studentID: ID
  course: Course @connection
}

type Attendance @model @auth(rules: [{allow: public}]) @key(name: "byTeacher", fields: ["teacherID"]) @key(name: "byCourse", fields: ["courseID"]) {
  id: ID!
  students: [Student] @connection(keyName: "byAttendance", fields: ["id"])
  attendDate: AWSTime
  teacherID: ID
  courseID: ID
}

type Teacher @model @auth(rules: [{allow: public}]) {
  id: ID!
  user: User @connection
  assignments: [Assignment] @connection(keyName: "byTeacher", fields: ["id"])
  attendances: [Attendance] @connection(keyName: "byTeacher", fields: ["id"])
}

type Student @model @auth(rules: [{allow: public}]) @key(name: "byAttendance", fields: ["attendanceID"]) {
  id: ID!
  user: User @connection
  attendanceID: ID
  enrolments: [Enrolment] @connection(keyName: "byStudent", fields: ["id"])
}

type Assignment @model @auth(rules: [{allow: public}]) @key(name: "byTeacher", fields: ["teacherID"]) {
  id: ID!
  name: String
  teacherID: ID
  course: Course @connection
}

type Role @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
}

type Course @model @auth(rules: [{allow: public}]) @key(name: "byUser", fields: ["userID"]) {
  id: ID!
  name: String
  userID: ID
  attendances: [Attendance] @connection(keyName: "byCourse", fields: ["id"])
  code: String
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String
  email: String
  phoneNum: String
  password: String
  role: Role @connection
  teachers: [Course] @connection(keyName: "byUser", fields: ["id"])
}
 